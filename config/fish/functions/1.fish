function 1
    function navigate --argument-names path --inherit-variable PWD
        set -l filters $argv[2..-1]
        while true
            set -l selected (
                begin
                    echo "‚¨Ö Voltar"
                    echo "üìù Criar novo arquivo"
                    echo "üóëÔ∏è Excluir arquivo"
                    echo "üìñ Abrir todos os arquivos aqui"
                    find "$path" -maxdepth 1 -mindepth 1 -type d | sort
                    find "$path" -maxdepth 1 -mindepth 1 -type f | sort
                end |
                while read -l f
                    if test "$f" = "‚¨Ö Voltar" -o "$f" = "üìù Criar novo arquivo" -o "$f" = "üóëÔ∏è Excluir arquivo" -o "$f" = "üìñ Abrir todos os arquivos aqui"
                        echo "$f"
                        continue
                    end
                    set name (basename "$f")
                    if test (count $filters) -gt 0
                        if not contains "$name" $filters
                            continue
                        end
                    end
                    if test -d "$f"
                        echo "üìÅ $name"
                    else
                        echo "üìÑ $name"
                    end
                end | fzf --multi --prompt "üìÇ $path > " --height 20 --layout=reverse --border
            )

            if test -z "$selected"
                return 0
            end

            if test (count $selected) -eq 1
                set fullpath "$path/"(string sub --start=3 "$selected")
                switch "$selected"
                    case "‚¨Ö Voltar"
                        return 1
                    case "üìù Criar novo arquivo"
                        read -P "Nome do arquivo: " new_file
                        if test -n "$new_file"
                            sudo -E zeditor "$path/$new_file" && exit
                        end
                        continue
                    case "üóëÔ∏è Excluir arquivo"
                        set -l files_to_delete (find "$path" -maxdepth 1 -mindepth 1 -type f | sort | while read -l f; echo "üìÑ "(basename "$f"); end | fzf --multi --prompt "üóëÔ∏è Selecione (use Tab) > ")
                        if test -n "$files_to_delete"
                            for file in $files_to_delete
                                set file (string sub -s 3 "$file")
                                read -P "Confirmar exclus√£o de $file? (s/n): " confirm
                                if test "$confirm" = "s"
                                    sudo rm -f "$path/$file"
                                    echo "Arquivo exclu√≠do."
                                end
                            end
                        end
                        continue
                    case "üìñ Abrir todos os arquivos aqui"
                        set -l all_files (find "$path" -maxdepth 1 -mindepth 1 -type f)
                        if test (count $all_files) -gt 0
                            sudo -E zeditor $all_files && exit
                        else
                            echo "Nenhum arquivo encontrado."
                        end
                        continue
                end
                if test -d "$fullpath"
                    navigate "$fullpath"
                    if test $status -eq 0
                        return 0
                    end
                else if test -f "$fullpath"
                    sudo -E zeditor "$fullpath" && exit
                    return 0
                end
            else
                set -l files_to_open
                for item in $selected
                    if string match -q -- "‚¨Ö Voltar" "üìù Criar novo arquivo" "üóëÔ∏è Excluir arquivo" "üìñ Abrir todos os arquivos aqui" "$item"
                        continue
                    end
                    set item_full_path "$path/"(string sub -s 3 "$item")
                    if test -d "$item_full_path"
                        for f in (find "$item_full_path" -maxdepth 1 -type f)
                            set -a files_to_open "$f"
                        end
                    else if test -f "$item_full_path"
                        set -a files_to_open "$item_full_path"
                    end
                end

                if test (count $files_to_open) -gt 0
                    sudo -E zeditor $files_to_open && exit
                else
                    echo "Nenhum arquivo para abrir."
                end
            end
        end
    end

    while true
        set -l main_selection ( echo -e "‚ùå Sair\nü§ñ Executar bot\nüöÄ A√ß√µes do Sistema\n‚≠ê Favoritos\nüóÇÔ∏è Abrir .config\n‚ùÑÔ∏è Abrir /etc/nixos\nüìπ Baixar com yt-dlp" | fzf --prompt "‚öôÔ∏è Configura√ß√µes > " --layout=reverse --border )
        if test -z "$main_selection"
            break
        end

        switch "$main_selection"
            case "‚ùå Sair"
                break
            case "ü§ñ Executar bot"
                cd ~/ls/bots; set bot_dir (printf "%s\n" "‚Ü©Ô∏è Voltar" (for d in */; echo "üìÅ $d"; end | sort -r) | fzf --reverse | sed 's/^üìÅ //'); if test -z "$bot_dir" -o "$bot_dir" = "‚Ü©Ô∏è Voltar"; continue; end
                cd $bot_dir; set py_file (printf "%s\n" "‚Ü©Ô∏è Voltar" (for f in *.py; echo "üêç $f"; end | sort -r) | fzf --reverse | sed 's/^üêç //'); if test -z "$py_file" -o "$py_file" = "‚Ü©Ô∏è Voltar"; continue; end
                if test -d venv; source venv/bin/activate.fish; else if test -d .venv; source .venv/bin/activate.fish; else; source ~/ls/venv/bin/activate.fish; end
                command python $py_file

            case "üöÄ A√ß√µes do Sistema"
                while true
                    set -l action_selection ( echo -e "‚Ü©Ô∏è Voltar\nüì¶ Instalar programas\nüîÑ Atualizar o sistema\nüßπ Limpeza do Sistema" | fzf --prompt "üöÄ A√ß√µes > " --height 10 --layout=reverse --border )

                    if test -z "$action_selection" -o "$action_selection" = "‚Ü©Ô∏è Voltar"; break; end

                    switch "$action_selection"
                        case "üì¶ Instalar programas"
                            sudo -E zeditor /etc/nixos/modules/packages.nix && exit

                        case "üîÑ Atualizar o sistema"
                            set confirm (echo -e "Sim\nN√£o" | fzf --prompt "Executar 'sudo nixos-rebuild switch'?" --height 4 --layout=reverse --border)
                            if test "$confirm" = "Sim"; sudo nixos-rebuild switch && exit; else; echo "Opera√ß√£o cancelada."; end

                        case "üßπ Limpeza do Sistema"
                            while true
                                set -l clean_selection ( echo -e "‚Ü©Ô∏è Voltar\nüî• Limpar Cache do Usu√°rio (~/.cache)\nüóëÔ∏è Nix: Coletar Lixo (Garbage Collect)\n‚ú® Nix: Limpeza Completa (GC + Otimizar Store)" | fzf --prompt "üßπ Limpeza > " --height 10 --layout=reverse --border )

                                if test -z "$clean_selection" -o "$clean_selection" = "‚Ü©Ô∏è Voltar"; break; end

                                switch "$clean_selection"
                                    case "üî• Limpar Cache do Usu√°rio (~/.cache)"
                                        echo "Limpando $HOME/.cache/* ..."
                                        # Usamos /* para limpar o conte√∫do, mantendo a pasta
                                        sudo rm -rf $HOME/.cache/*
                                        if test $status -eq 0
                                            echo "‚úÖ Cache limpo."
                                        else
                                            echo "‚ùå Erro ao limpar cache."
                                        end
                                        sleep 1

                                    case "üóëÔ∏è Nix: Coletar Lixo (Garbage Collect)"
                                        set confirm (echo -e "Sim\nN√£o" | fzf --prompt "Executar 'nix-collect-garbage -d'?" --height 4 --layout=reverse --border)
                                        if test "$confirm" = "Sim"
                                            echo "Executando nix-collect-garbage -d..."
                                            nix-collect-garbage -d
                                            if test $status -eq 0
                                                echo "‚úÖ Garbage collection conclu√≠da."
                                            else
                                                echo "‚ùå Erro no garbage collection."
                                            end
                                        else
                                            echo "Cancelado."
                                        end
                                        sleep 1

                                    case "‚ú® Nix: Limpeza Completa (GC + Otimizar Store)"
                                        set confirm (echo -e "Sim\nN√£o" | fzf --prompt "Limpeza completa? (Leva tempo)" --height 4 --layout=reverse --border)
                                        if test "$confirm" = "Sim"
                                            echo "Iniciando limpeza profunda do Nix..."

                                            echo "1/2: Executando garbage collection (-d)..."
                                            nix-collect-garbage -d

                                            echo "2/2: Otimizando store..."
                                            sudo nix-store --optimise

                                            if test $status -eq 0
                                                echo "‚úÖ Limpeza completa conclu√≠da."
                                            else
                                                echo "‚ùå Erro durante a limpeza."
                                            end
                                        else
                                            echo "Cancelado."
                                        end
                                        sleep 1
                                end
                            end
                    end
                end

            case "‚≠ê Favoritos"
                 while true
                    set -l fav_main_selection ( echo -e "‚Ü©Ô∏è Voltar\nüóÇÔ∏è Acessar .config\n‚ùÑÔ∏è Acessar /etc/nixos\nüêü Acessar ~/.config/fish" | fzf --prompt "‚≠ê Favoritos > Locais" --height 10 --layout=reverse --border )
                    if test -z "$fav_main_selection" -o "$fav_main_selection" = "‚Ü©Ô∏è Voltar"; break; end
                    switch "$fav_main_selection"
                        case "üóÇÔ∏è Acessar .config"
                            set action ( echo -e "‚Ü©Ô∏è Voltar\n‚ñ∂Ô∏è Abrir TODOS os arquivos em .config\nüìÇ Navegar em .config" | fzf --prompt "üóÇÔ∏è .config > A√ß√µes" --height 10 --layout=reverse --border )
                            switch "$action"
                                case "‚ñ∂Ô∏è Abrir TODOS os arquivos em .config"
                                    set -l all_files (find "$HOME/.config" -type f)
                                    if test (count $all_files) -gt 0; sudo -E zeditor $all_files && exit; end
                                    continue
                                case "üìÇ Navegar em .config"
                                    navigate "$HOME/.config" fish hypr kitty mpv waybar wofi
                                    break 2
                            end
                        case "‚ùÑÔ∏è Acessar /etc/nixos"
                            set action ( echo -e "‚Ü©Ô∏è Voltar\n‚ñ∂Ô∏è Abrir TODOS os arquivos em nixos\nüìÇ Navegar em nixos\n‚ùÑÔ∏è Reconstruir o sistema" | fzf --prompt "‚ùÑÔ∏è nixos > A√ß√µes" --height 10 --layout=reverse --border )
                            switch "$action"
                                case "‚ñ∂Ô∏è Abrir TODOS os arquivos em nixos"
                                    set -l all_files (find "/etc/nixos" -type f)
                                    if test (count $all_files) -gt 0; sudo -E zeditor $all_files && exit; end
                                    continue
                                case "üìÇ Navegar em nixos"
                                    navigate "/etc/nixos"; break 2
                                case "‚ùÑÔ∏è Reconstruir o sistema"
                                    set confirm (echo -e "Sim\nN√£o" | fzf --prompt "Reconstruir sistema?" --height 4 --layout=reverse --border)
                                    if test "$confirm" = "Sim"; sudo nixos-rebuild switch && exit; end
                            end
                        case "üêü Acessar ~/.config/fish"
                            set action ( echo -e "‚Ü©Ô∏è Voltar\n‚ñ∂Ô∏è Abrir TODOS os arquivos em fish\nüìÇ Navegar em fish" | fzf --prompt "üêü fish > A√ß√µes" --height 10 --layout=reverse --border )
                            switch "$action"
                                case "‚ñ∂Ô∏è Abrir TODOS os arquivos em fish"
                                    set -l all_files (find "$HOME/.config/fish" -type f)
                                    if test (count $all_files) -gt 0; sudo -E zeditor $all_files && exit; end
                                    continue
                                case "üìÇ Navegar em fish"
                                    navigate "$HOME/.config/fish"; break 2
                            end
                    end
                end
            case "üóÇÔ∏è Abrir .config"
                navigate "$HOME/.config" fish hypr kitty mpv waybar wofi
            case "‚ùÑÔ∏è Abrir /etc/nixos"
                navigate "/etc/nixos"
            case "üìπ Baixar com yt-dlp"
                while true
                    set base_download_dir ~/ls/videos
                    set -l ytdlp_action (
                        echo -e "‚Ü©Ô∏è Voltar\nüéµ Baixar √Åudio (MP3)\nüìº Baixar V√≠deo (MP4 720p)" |
                        fzf --prompt "üìπ yt-dlp > " --height 10 --layout=reverse --border
                    )

                    if test -z "$ytdlp_action" -o "$ytdlp_action" = "‚Ü©Ô∏è Voltar"; break; end

                    switch "$ytdlp_action"
                        case "üéµ Baixar √Åudio (MP3)" "üìº Baixar V√≠deo (MP4 720p)"
                            read -P "üîó Cole o link: " video_url
                            if test -z "$video_url"; continue; end
                            set clean_url (echo "$video_url" | string trim | sed "s/['\"]//g")
                            set video_title (yt-dlp --get-title "$clean_url" 2>/dev/null || echo "T√≠tulo Indispon√≠vel")
                            set video_duration (yt-dlp --get-duration "$clean_url" 2>/dev/null || echo "0:00")
                            set current_date (date +%d/%m/%Y)
                            set log_file "$base_download_dir/downloads.txt"
                            set downloaded_file ""

                            switch "$ytdlp_action"
                                case "üìº Baixar V√≠deo (MP4 720p)"
                                    set download_dir "$base_download_dir/mp4"; mkdir -p "$download_dir"; set log_prefix "üìº mp4"
                                    set downloaded_file (yt-dlp -f "bv[height<=720]+ba/b[height<=720]" --print filename -o "$download_dir/%(title)s.%(ext)s" "$clean_url")

                                case "üéµ Baixar √Åudio (MP3)"
                                    set download_dir "$base_download_dir/mp3"; mkdir -p "$download_dir"; set log_prefix "üéµ mp3"
                                    set downloaded_file (yt-dlp -x --audio-format mp3 -q 0 --print filename -o "$download_dir/%(title)s.%(ext)s" "$clean_url")
                            end

                            if test $status -eq 0 -a -n "$downloaded_file"
                                echo -e "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n$log_prefix ‚ïê $video_duration ‚ïê üìÖ $current_date\n$video_title\n$clean_url\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê" >> $log_file
                                echo "‚úÖ Download conclu√≠do."
                                set post_action ( echo -e "‚úÖ Concluir (Sair)\n‚Ü©Ô∏è Voltar ao menu" | fzf --prompt "O que fazer? > " )
                                switch "$post_action"
                                    case "‚úÖ Concluir (Sair)"; exit
                                    case "‚Ü©Ô∏è Voltar ao menu"; continue
                                end
                            else
                                echo "‚ùå Falha no download."
                            end
                    end
                end
        end
    end
end
